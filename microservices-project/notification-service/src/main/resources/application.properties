server.port=0
spring.application.name=notification-service
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

spring.sleuth.integration.enabled=true
spring.zipkin.base-url=http://localhost:9411/
spring.sleuth.sampler.probability=1

# Kafka Properties for reciever
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.consumer.group-id= notificationId
# recieve message -> need to deserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.type.mapping=event:com.example.notificationservice.dto.OrderPlacedEvent
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# can access prometheus from /actuator/prometheus
management.endpoints.web.exposure.include=prometheus